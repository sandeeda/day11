package com.capgemini.bankapp.repository.impl;

import java.util.HashSet;
import java.util.Iterator;

import com.capgemini.bankapp.entities.BankAccount;
import com.capgemini.bankapp.repository.BankAccountRepository;

public class BankAccountRepositoryImpl implements BankAccountRepository {


	private HashSet<BankAccount> accounts;

	public BankAccountRepositoryImpl() {
		super();
		accounts = new HashSet<>();
		accounts.add(new BankAccount(1234, "John Doe", "SAVING", 1000));
		accounts.add(new BankAccount(5678, "Jane Doe", "SAVING", 2000));
		accounts.add(new BankAccount(9101, "whitman", "CURRENT", 3000));
		accounts.add(new BankAccount(2345, "Walter White", "SAVING", 4000));
		accounts.add(new BankAccount(1234, "Jessie Pinkman", "CURRENT", 5000));
	}

	@Override
	public double getBalance(long accountId) {
		for (BankAccount bankAccount : accounts) {
			if(bankAccount.getAccountId()==accountId)
			{
				return bankAccount.getAccountId();
			}

		}
		return -1;
	}

	@Override
	public boolean updateBalance(long accountId, double newBalance) {
		
		for (BankAccount bankAccount : accounts) {
			if(bankAccount.getAccountId()==accountId)
			{
				bankAccount.setAccountBalance(newBalance);
				return true;
			}
		}
		
		return false;
	}

}
