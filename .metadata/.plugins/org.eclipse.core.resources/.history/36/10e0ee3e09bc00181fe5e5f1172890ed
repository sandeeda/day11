package com.capgemini.bankapp.service.impl;

import com.capgemini.bankapp.exception.LowBalanceException;
import com.capgemini.bankapp.repository.BankAccountRepository;
import com.capgemini.bankapp.service.BankAccountService;

public class BankAccountServiceImpl implements BankAccountService {

	private BankAccountRepository bankRepository;

	@Override
	public double getBalance(long accountId) {
		// TODO Auto-generated method stub
		return bankRepository.getBalance(accountId);
	}

	public void setBankRepository(BankAccountRepository bankRepository) {
		this.bankRepository = bankRepository;
	}
	@Override
	public double withdraw(long accountId, double amount)throws LowBalanceException {
		// TODO Auto-generated method stub
		if(bankRepository.getBalance(accountId)-amount>=0)
		{
			amount=bankRepository.getBalance(accountId)-amount;
			if(bankRepository.updateBalance(accountId, amount))
			{
				return bankRepository.getBalance(accountId);
			}
			else
			{
				return bankRepository.getBalance(accountId);
			}
		}
		else
		{
			throw new LowBalanceException("paisa khatam");
			}
	}

	@Override
	public double deposit(long accountId, double amount) {
		// TODO Auto-generated method stub
		if(bankRepository.getBalance(accountId)>=0)
		{
			amount=bankRepository.getBalance(accountId)+amount;
			if(bankRepository.updateBalance(accountId, amount))
			{
				return bankRepository.getBalance(accountId);
			}
			else
			{
				return bankRepository.getBalance(accountId);
			}
		}
		return bankRepository.getBalance(accountId);	}

	@Override
	public boolean fundTransfer(long fromAccount, long toAccount, double amount)throws LowBalanceException {
		// TODO Auto-generated method stub
		if(bankRepository.getBalance(fromAccount)>=amount)
		{
			if(bankRepository.getBalance(toAccount)>=0)
			{
				withdraw(fromAccount, amount);
				deposit(toAccount, amount);
				return true;

			}
		}
		return false;
	}

}
